name: Deploy Backend

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Quellcode auschecken
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Java einrichten (falls nötig)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # oder ein anderer JDK-Provider
          java-version: '21' # Version anpassen je nach Projektbedarf

      # 3. SSH-Agent einrichten und Keys hinzufügen
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      # Optional: Known Hosts hinzufügen (falls StrictHostKeyChecking aktiv ist)
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 159.69.153.5 >> ~/.ssh/known_hosts

      # 4. Rechte setzen (falls die mvnw nicht ausführbar ist)
      - name: Make mvnw executable
        run: chmod +x ./mvnw

      # 5. Anwendung bauen (ohne Tests, falls gewünscht)
      - name: Build application
        run: ./mvnw clean package -DskipTests

      - name: List target directory
        run: ls -al target

      - name: Test connection
        run: ssh deploy@159.69.153.5 "touch /opt/backend/bin/testfile_from_actions && ls -al /opt/backend/bin"


      # 6. Deployment auf den Server durchführen
      - name: Deploy to Server
        run: |
          # Kopiert das gebaute JAR auf den Server
          ssh deploy@159.69.153.5 "sudo systemctl stop backend"
          scp target/webserver-test-0.0.1-SNAPSHOT.jar deploy@159.69.153.5:/opt/backend/bin/webserver-backend.jar
          ssh deploy@159.69.153.5 "sudo systemctl start backend"
          
          # Backend Service neu starten (unnötig?)
          ssh deploy@159.69.153.5 "sudo systemctl restart backend"
